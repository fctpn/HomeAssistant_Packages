#### test test test

# Package - Unavailable Entities Sensor
# Count and list of entities with a state of unavailable
#
# You must set in secrets.yaml
# delay_notify_unavailable: 00:10:00
# notify_service: notify.notify
# 
# If you want to exlcude entities create group ignored_entities in groups.yaml
# Example:
#  ignored_entities:
#    entities:
#       - sensor.temperature

group:
  ignored_entities:
    entities:
      - 

template:
  - trigger:
      - platform: time_pattern
        minutes: "/1"
    sensor:
      - name: "Unavailable Entities"
        icon: "mdi:format-list-checks"
        state: >
              {{ states
                |selectattr('state','in',['unavailable'])
                |rejectattr('domain','in',['group','person','device_tracker','media_player'])
                |rejectattr('entity_id','search','_rssi')
                |rejectattr('entity_id','search','_ssid')
                |rejectattr('entity_id','search','_ip')
                |rejectattr('entity_id','search','_firmware_update')
                |rejectattr('entity_id','search','_wi_fi')
                |rejectattr('entity_id','search','_overheating')
                |rejectattr('entity_id','search','_overpowering')
                |rejectattr('entity_id','search','_ds18b20_id')
                |rejectattr('entity_id','search','_energy')
                |rejectattr('entity_id','search','_power')
                |rejectattr('entity_id','search','_device_temperature')
                |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))
                |list|count
              }}
        attributes:
            names: >
              {{ states
                |selectattr('state','in',['unavailable'])
                |rejectattr('domain','in',['group','person','device_tracker','media_player'])
                |rejectattr('entity_id','search','_rssi')
                |rejectattr('entity_id','search','_ssid')
                |rejectattr('entity_id','search','_ip')
                |rejectattr('entity_id','search','_firmware_update')
                |rejectattr('entity_id','search','_wi_fi')
                |rejectattr('entity_id','search','_overheating')
                |rejectattr('entity_id','search','_overpowering')
                |rejectattr('entity_id','search','_ds18b20_id')
                |rejectattr('entity_id','search','_energy')
                |rejectattr('entity_id','search','_power')
                |rejectattr('entity_id','search','_device_temperature')
                |rejectattr('entity_id','in',state_attr('group.ignored_entities','entity_id'))
                |map(attribute='name')|join(', ')
              }}
  - binary_sensor:
      - name: "Unavailable Entities Alert"
        state: "{{ states('sensor.unavailable_entities')|int > 0 or is_state('sensor.unavailable_entities', 'unknown') }}"
        delay_on: !secret delay_notify_unavailable
        icon: "mdi:alert-circle"

automation:
  - id: "unavailable_entities_detected"
    alias: Unavailable Entities Detected
    mode: restart
    trigger:
      - platform: state
        entity_id: sensor.unavailable_entities
        for: !secret delay_notify_unavailable
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.unavailable_entities
                above: '0'
                below: '2'
            sequence:
              - service: !secret notify_service
                data:
                  title: ðŸ”´ Este un dispozitiv indisponibil!
                  message: â€“ {{ state_attr('sensor.unavailable_entities','names').split(',') | join("\nâ€“") }}
          - conditions:
              - condition: numeric_state
                entity_id: sensor.unavailable_entities
                above: '1'
            sequence:
              - service: !secret notify_service
                data:
                  title: ðŸ”´ Sunt {{ states('sensor.unavailable_entities')|int }} dispozitive indisponibile!
                  message: â€“ {{ state_attr('sensor.unavailable_entities','names').split(',') | join("\nâ€“") }}
        default: []
        
  - id: "unavailable_entities_cleared"
    alias: Unavailable Entities Cleared
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.unavailable_entities_alert
        from: 'on'
        to: 'off'
    condition: []
    action:
      - service: !secret notify_service
        data:
          message: ðŸŸ¢ Toate dispozitivele funcÈ›ionzeazÄƒ!
